@page
@model LoginModel

@{
    ViewData["Title"] = "Log in";
}

<style>
    @Html.Raw(Model.MinifiedCSS)
</style>

<section class="ftco-section">
    <div class="container">
        <div class="row justify-content-center">
            <div class="col-md-5">
                <div class="wrap">
                    <div class="login-wrap p-5">
                        <div>
                            <div class="w-100">
                                <h3 class="mb-4">Sign In</h3>
                            </div>
                        </div>
                        <div>
                            <form id="account" method="post">
                                <div asp-validation-summary="ModelOnly" class="text-danger" role="alert"></div>
                                <div class="form-floating mb-2">
                                    <label asp-for="Input.Email" class="form-label">Email</label>
                                    <input asp-for="Input.Email" class="form-control" autocomplete="username" aria-required="true" placeholder="name@example.com" />
                                    <span asp-validation-for="Input.Email" class="text-danger"></span>
                                </div>
                                <div class="form-floating mb-2">
                                    <label asp-for="Input.Password" class="form-label">Password</label>
                                    <input asp-for="Input.Password" class="form-control" autocomplete="current-password" aria-required="true" placeholder="password" />
                                    <span asp-validation-for="Input.Password" class="text-danger"></span>
                                </div>
                                <div class="checkbox ml-3 mb-3">
                                    <label asp-for="Input.RememberMe" class="form-label">
                                        <input class="form-check-input" asp-for="Input.RememberMe" />
                                        @Html.DisplayNameFor(m => m.Input.RememberMe)
                                    </label>
                                </div>
                                <div>
                                    <button id="login-submit" type="submit" class="w-100 btn btn-lg btn-primary">Log in</button>
                                </div>
                                <div>
                                    <p>
                                        <a id="forgot-password" asp-page="./ForgotPassword" asp-route-returnUrl="@(Model.ReturnUrl)">Forgot your password?</a>
                                    </p>
                                    @*<p>
                                        <a id="resend-confirmation" asp-page="./ResendEmailConfirmation">Resend email confirmation</a>
                                    </p>*@
                                </div>
                            </form>
                            <p class="text-center">
                                Don't have an account?
                                <a asp-page="./Register" asp-route-returnUrl="@Model.ReturnUrl">Sign up</a>
                            </p>
                        </div>

                        <div class="d-flex col-md-6">
                            <section>
                                @{
                                    if ((Model.ExternalLogins?.Count ?? 0) == 0) { }
                                    else
                                    {
                                        <hr/>
                                        <form id="external-account" asp-page="./ExternalLogin" asp-route-returnUrl="@Model.ReturnUrl" method="post" class="form-horizontal">
                                            <div>
                                                <p>
                                                    @foreach (var provider in Model.ExternalLogins!)
                                                    {
                                                        <button type="submit" class="btn btn-primary" name="provider" value="@provider.Name" title="Sign in with @provider.DisplayName account">@provider.DisplayName</button>
                                                    }
                                                </p>
                                            </div>
                                        </form>
                                    }
                                }
                            </section>
                        </div>
                        <div>
                            <button onclick="RegPassKey();">Testing passkey</button>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
</section>


@*<div class="row">
    <div class="col-md-4">
        <section>
            <form id="account" method="post">
                <div asp-validation-summary="ModelOnly" class="text-danger" role="alert"></div>
                <div class="form-floating mb-3">
                    <input asp-for="Input.Email" class="form-control" autocomplete="username" aria-required="true" placeholder="name@example.com" />
                    <label asp-for="Input.Email" class="form-label">Email</label>
                    <span asp-validation-for="Input.Email" class="text-danger"></span>
                </div>
                <div class="form-floating mb-3">
                    <input asp-for="Input.Password" class="form-control" autocomplete="current-password" aria-required="true" placeholder="password" />
                    <label asp-for="Input.Password" class="form-label">Password</label>
                    <span asp-validation-for="Input.Password" class="text-danger"></span>
                </div>
                <div class="checkbox mb-3">
                    <label asp-for="Input.RememberMe" class="form-label">
                        <input class="form-check-input" asp-for="Input.RememberMe" />
                        @Html.DisplayNameFor(m => m.Input.RememberMe)
                    </label>
                </div>
                <div>
                    <button id="login-submit" type="submit" class="w-100 btn btn-lg btn-primary">Log in</button>
                </div>
                <div>
                    <p>
                        <a id="forgot-password" asp-page="./ForgotPassword">Forgot your password?</a>
                    </p>
                    <p>
                        <a asp-page="./Register" asp-route-returnUrl="@Model.ReturnUrl">Register as a new user</a>
                    </p>
                    <p>
                        <a id="resend-confirmation" asp-page="./ResendEmailConfirmation">Resend email confirmation</a>
                    </p>
                </div>
            </form>
        </section>
    </div>
    <div class="col-md-6 col-md-offset-2">
        <section>
            <h3>Use another service to log in.</h3>
            <hr />
            @{
                if ((Model.ExternalLogins?.Count ?? 0) == 0)
                {
                    <div>
                        <p>
                            There are no external authentication services configured. See this <a href="https://go.microsoft.com/fwlink/?LinkID=532715">article
                            about setting up this ASP.NET application to support logging in via external services</a>.
                        </p>
                    </div>
                }
                else
                {
                    <form id="external-account" asp-page="./ExternalLogin" asp-route-returnUrl="@Model.ReturnUrl" method="post" class="form-horizontal">
                        <div>
                            <p>
                                @foreach (var provider in Model.ExternalLogins!)
                                {
                                    <button type="submit" class="btn btn-primary" name="provider" value="@provider.Name" title="Log in using your @provider.DisplayName account">@provider.DisplayName</button>
                                }
                            </p>
                        </div>
                    </form>
                }
            }
        </section>
    </div>
</div>*@

@section Scripts {
    <partial name="_ValidationScriptsPartial" />

    <script type="text/javascript">

        function base64urlToUint8Array(base64UrlString) {
          // Add padding if necessary
          const padding = '='.repeat((4 - base64UrlString.length % 4) % 4);
          const base64 = (base64UrlString + padding)
            // Replace URL-specific characters with standard Base64 characters
            .replace(/-/g, '+')
            .replace(/_/g, '/');

          // Decode the Base64 string to a binary string
          const rawData = atob(base64);
          const outputArray = new Uint8Array(rawData.length);

          // Convert each character to its corresponding char code in the Uint8Array
          for (let i = 0; i < rawData.length; ++i) {
            outputArray[i] = rawData.charCodeAt(i);
          }
          return outputArray;
        }

        async function RegPassKey() {

            const username = "brandonzuech@gmail.com";

            // Get registration options from server
            const optionsResponse = await fetch('/Home/StartRegistration', {
                method: 'POST',
                headers: { 'Content-Type': 'application/json' },
                body: JSON.stringify({ username })
            });
            const options = await optionsResponse.json();

            // Convert some values to Uint8Array
            options.user.id = base64urlToUint8Array(options.user.id);
            options.challenge = base64urlToUint8Array(options.challenge);

            // Create credential
            const credential = await navigator.credentials.create({
                publicKey: options
            });

            // // Send credential to server
            // const response = await fetch('/Home/FinishRegistration', {
            //     method: 'POST',
            //     headers: { 'Content-Type': 'application/json' },
            //     body: JSON.stringify(credentialToJSON(credential))
            // });

            // if (response.ok) alert('Registration successful!');
        }

    
    </script>
}
